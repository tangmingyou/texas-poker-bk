// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: poker.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// v1.0.0
// protocol
type ProtoWrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ver     int32  `protobuf:"varint,1,opt,name=ver,proto3" json:"ver,omitempty"`         // version
	Op      int32  `protobuf:"varint,2,opt,name=op,proto3" json:"op,omitempty"`           // option/action
	Seq     int32  `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`         // sequence
	Success bool   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"` // 请求是否成功
	Body    []byte `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`        // proto bytes
}

func (x *ProtoWrap) Reset() {
	*x = ProtoWrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWrap) ProtoMessage() {}

func (x *ProtoWrap) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWrap.ProtoReflect.Descriptor instead.
func (*ProtoWrap) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoWrap) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *ProtoWrap) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *ProtoWrap) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *ProtoWrap) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProtoWrap) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeMs uint64 `protobuf:"varint,1,opt,name=timeMs,proto3" json:"timeMs,omitempty"` // 毫秒时间戳
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{1}
}

func (x *Ping) GetTimeMs() uint64 {
	if x != nil {
		return x.TimeMs
	}
	return 0
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeMs uint64 `protobuf:"varint,1,opt,name=timeMs,proto3" json:"timeMs,omitempty"` // 毫秒时间戳
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{2}
}

func (x *Pong) GetTimeMs() uint64 {
	if x != nil {
		return x.TimeMs
	}
	return 0
}

// 成功消息
type ResSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ResSuccess) Reset() {
	*x = ResSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResSuccess) ProtoMessage() {}

func (x *ResSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResSuccess.ProtoReflect.Descriptor instead.
func (*ResSuccess) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{3}
}

func (x *ResSuccess) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// 失败响应
type ResFail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"` // 失败消息
}

func (x *ResFail) Reset() {
	*x = ResFail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResFail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResFail) ProtoMessage() {}

func (x *ResFail) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResFail.ProtoReflect.Descriptor instead.
func (*ResFail) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{4}
}

func (x *ResFail) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResFail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ReqIdentity) Reset() {
	*x = ReqIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqIdentity) ProtoMessage() {}

func (x *ReqIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqIdentity.ProtoReflect.Descriptor instead.
func (*ReqIdentity) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{5}
}

func (x *ReqIdentity) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ResIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResIdentity) Reset() {
	*x = ResIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResIdentity) ProtoMessage() {}

func (x *ResIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResIdentity.ProtoReflect.Descriptor instead.
func (*ResIdentity) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{6}
}

func (x *ResIdentity) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ResIdentity) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 大厅消息 ============= begin
type ReqLobbyView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqLobbyView) Reset() {
	*x = ReqLobbyView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLobbyView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLobbyView) ProtoMessage() {}

func (x *ReqLobbyView) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLobbyView.ProtoReflect.Descriptor instead.
func (*ReqLobbyView) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{7}
}

type ResLobbyView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []*LobbyTable `protobuf:"bytes,3,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *ResLobbyView) Reset() {
	*x = ResLobbyView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResLobbyView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResLobbyView) ProtoMessage() {}

func (x *ResLobbyView) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResLobbyView.ProtoReflect.Descriptor instead.
func (*ResLobbyView) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{8}
}

func (x *ResLobbyView) GetTables() []*LobbyTable {
	if x != nil {
		return x.Tables
	}
	return nil
}

type LobbyTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableNo   int32          `protobuf:"varint,1,opt,name=tableNo,proto3" json:"tableNo,omitempty"`     // 游戏编号
	PlayerNum int32          `protobuf:"varint,2,opt,name=playerNum,proto3" json:"playerNum,omitempty"` // 限定玩家数量
	RobotNum  int32          `protobuf:"varint,3,opt,name=robotNum,proto3" json:"robotNum,omitempty"`   // 限定机器人数量
	Players   []*LobbyPlayer `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty"`      // 当前玩家机器人列表
}

func (x *LobbyTable) Reset() {
	*x = LobbyTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbyTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyTable) ProtoMessage() {}

func (x *LobbyTable) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyTable.ProtoReflect.Descriptor instead.
func (*LobbyTable) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{9}
}

func (x *LobbyTable) GetTableNo() int32 {
	if x != nil {
		return x.TableNo
	}
	return 0
}

func (x *LobbyTable) GetPlayerNum() int32 {
	if x != nil {
		return x.PlayerNum
	}
	return 0
}

func (x *LobbyTable) GetRobotNum() int32 {
	if x != nil {
		return x.RobotNum
	}
	return 0
}

func (x *LobbyTable) GetPlayers() []*LobbyPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

type LobbyPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robot    bool   `protobuf:"varint,1,opt,name=robot,proto3" json:"robot,omitempty"` // 是否机器人
	Id       int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Avatar   string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *LobbyPlayer) Reset() {
	*x = LobbyPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbyPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyPlayer) ProtoMessage() {}

func (x *LobbyPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyPlayer.ProtoReflect.Descriptor instead.
func (*LobbyPlayer) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{10}
}

func (x *LobbyPlayer) GetRobot() bool {
	if x != nil {
		return x.Robot
	}
	return false
}

func (x *LobbyPlayer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LobbyPlayer) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LobbyPlayer) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

// 创建桌面 ============= begin
type ReqCreateTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players int32 `protobuf:"varint,1,opt,name=players,proto3" json:"players,omitempty"`
	Robots  int32 `protobuf:"varint,2,opt,name=robots,proto3" json:"robots,omitempty"`
}

func (x *ReqCreateTable) Reset() {
	*x = ReqCreateTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateTable) ProtoMessage() {}

func (x *ReqCreateTable) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateTable.ProtoReflect.Descriptor instead.
func (*ReqCreateTable) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{11}
}

func (x *ReqCreateTable) GetPlayers() int32 {
	if x != nil {
		return x.Players
	}
	return 0
}

func (x *ReqCreateTable) GetRobots() int32 {
	if x != nil {
		return x.Robots
	}
	return 0
}

type ResCreateTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableNo int32 `protobuf:"varint,1,opt,name=tableNo,proto3" json:"tableNo,omitempty"`
}

func (x *ResCreateTable) Reset() {
	*x = ResCreateTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateTable) ProtoMessage() {}

func (x *ResCreateTable) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateTable.ProtoReflect.Descriptor instead.
func (*ResCreateTable) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{12}
}

func (x *ResCreateTable) GetTableNo() int32 {
	if x != nil {
		return x.TableNo
	}
	return 0
}

// 加入游戏 ============= begin
type ReqJoinTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableNo int32 `protobuf:"varint,1,opt,name=tableNo,proto3" json:"tableNo,omitempty"`
}

func (x *ReqJoinTable) Reset() {
	*x = ReqJoinTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqJoinTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqJoinTable) ProtoMessage() {}

func (x *ReqJoinTable) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqJoinTable.ProtoReflect.Descriptor instead.
func (*ReqJoinTable) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{13}
}

func (x *ReqJoinTable) GetTableNo() int32 {
	if x != nil {
		return x.TableNo
	}
	return 0
}

// 离开房间
type ReqLeaveTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqLeaveTable) Reset() {
	*x = ReqLeaveTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLeaveTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLeaveTable) ProtoMessage() {}

func (x *ReqLeaveTable) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLeaveTable.ProtoReflect.Descriptor instead.
func (*ReqLeaveTable) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{14}
}

// 玩家准备开始
type ReqReadyStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqReadyStart) Reset() {
	*x = ReqReadyStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReadyStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReadyStart) ProtoMessage() {}

func (x *ReqReadyStart) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReadyStart.ProtoReflect.Descriptor instead.
func (*ReqReadyStart) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{15}
}

// 房主踢人
type ReqKickOutTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64 `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (x *ReqKickOutTable) Reset() {
	*x = ReqKickOutTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqKickOutTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqKickOutTable) ProtoMessage() {}

func (x *ReqKickOutTable) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqKickOutTable.ProtoReflect.Descriptor instead.
func (*ReqKickOutTable) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{16}
}

func (x *ReqKickOutTable) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

// 被踢人接受消息
type ResKickOutTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResKickOutTable) Reset() {
	*x = ResKickOutTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResKickOutTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResKickOutTable) ProtoMessage() {}

func (x *ResKickOutTable) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResKickOutTable.ProtoReflect.Descriptor instead.
func (*ResKickOutTable) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{17}
}

type ReqGameAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action int32 `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"` // 4下大盲注,5下小盲注,6跟注,7弃牌
	Chip   int32 `protobuf:"varint,2,opt,name=chip,proto3" json:"chip,omitempty"`     // 押注金额
}

func (x *ReqGameAction) Reset() {
	*x = ReqGameAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameAction) ProtoMessage() {}

func (x *ReqGameAction) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameAction.ProtoReflect.Descriptor instead.
func (*ReqGameAction) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{18}
}

func (x *ReqGameAction) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *ReqGameAction) GetChip() int32 {
	if x != nil {
		return x.Chip
	}
	return 0
}

type ResGameAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResGameAction) Reset() {
	*x = ResGameAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGameAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGameAction) ProtoMessage() {}

func (x *ResGameAction) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGameAction.ProtoReflect.Descriptor instead.
func (*ResGameAction) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{19}
}

// 查询玩家当前游戏状态
type ReqGameFullStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqGameFullStatus) Reset() {
	*x = ReqGameFullStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameFullStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameFullStatus) ProtoMessage() {}

func (x *ReqGameFullStatus) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameFullStatus.ProtoReflect.Descriptor instead.
func (*ReqGameFullStatus) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{20}
}

type ResGameFullStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InGame     bool           `protobuf:"varint,1,opt,name=inGame,proto3" json:"inGame,omitempty"`         // 游戏是否进行中
	TableNo    int32          `protobuf:"varint,2,opt,name=tableNo,proto3" json:"tableNo,omitempty"`       // 所在桌面编号
	GameStage  int32          `protobuf:"varint,3,opt,name=gameStage,proto3" json:"gameStage,omitempty"`   // 游戏阶段？
	Chip       int32          `protobuf:"varint,4,opt,name=chip,proto3" json:"chip,omitempty"`             // 牌桌筹码
	RoundTimes int32          `protobuf:"varint,5,opt,name=roundTimes,proto3" json:"roundTimes,omitempty"` // 回合次数
	PlayerId   int64          `protobuf:"varint,6,opt,name=playerId,proto3" json:"playerId,omitempty"`     // 当前玩家id
	PublicCard []*Card        `protobuf:"bytes,9,rep,name=publicCard,proto3" json:"publicCard,omitempty"`  // 公共牌
	Players    []*TablePlayer `protobuf:"bytes,10,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *ResGameFullStatus) Reset() {
	*x = ResGameFullStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGameFullStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGameFullStatus) ProtoMessage() {}

func (x *ResGameFullStatus) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGameFullStatus.ProtoReflect.Descriptor instead.
func (*ResGameFullStatus) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{21}
}

func (x *ResGameFullStatus) GetInGame() bool {
	if x != nil {
		return x.InGame
	}
	return false
}

func (x *ResGameFullStatus) GetTableNo() int32 {
	if x != nil {
		return x.TableNo
	}
	return 0
}

func (x *ResGameFullStatus) GetGameStage() int32 {
	if x != nil {
		return x.GameStage
	}
	return 0
}

func (x *ResGameFullStatus) GetChip() int32 {
	if x != nil {
		return x.Chip
	}
	return 0
}

func (x *ResGameFullStatus) GetRoundTimes() int32 {
	if x != nil {
		return x.RoundTimes
	}
	return 0
}

func (x *ResGameFullStatus) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ResGameFullStatus) GetPublicCard() []*Card {
	if x != nil {
		return x.PublicCard
	}
	return nil
}

func (x *ResGameFullStatus) GetPlayers() []*TablePlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

type TablePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robot    bool    `protobuf:"varint,1,opt,name=robot,proto3" json:"robot,omitempty"` // 是否机器人
	Id       int64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Username string  `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Avatar   string  `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Chip     int32   `protobuf:"varint,5,opt,name=chip,proto3" json:"chip,omitempty"`        // 筹码
	Status   int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`    // 玩家状态: 1待准备开始,2已准备开始,已开始(3等待其他玩家动作,4待大盲注,5待小盲注,6待跟注,7已弃)
	Master   bool    `protobuf:"varint,7,opt,name=master,proto3" json:"master,omitempty"`    // 是否房主`
	HandCard []*Card `protobuf:"bytes,8,rep,name=handCard,proto3" json:"handCard,omitempty"` // 手牌
}

func (x *TablePlayer) Reset() {
	*x = TablePlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TablePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TablePlayer) ProtoMessage() {}

func (x *TablePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TablePlayer.ProtoReflect.Descriptor instead.
func (*TablePlayer) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{22}
}

func (x *TablePlayer) GetRobot() bool {
	if x != nil {
		return x.Robot
	}
	return false
}

func (x *TablePlayer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TablePlayer) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TablePlayer) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *TablePlayer) GetChip() int32 {
	if x != nil {
		return x.Chip
	}
	return 0
}

func (x *TablePlayer) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TablePlayer) GetMaster() bool {
	if x != nil {
		return x.Master
	}
	return false
}

func (x *TablePlayer) GetHandCard() []*Card {
	if x != nil {
		return x.HandCard
	}
	return nil
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dot  int32  `protobuf:"varint,1,opt,name=dot,proto3" json:"dot,omitempty"`  // 点数
	Suit string `protobuf:"bytes,2,opt,name=suit,proto3" json:"suit,omitempty"` // 花色, protobuf默认值0, string类型区分空白牌
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poker_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_poker_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_poker_proto_rawDescGZIP(), []int{23}
}

func (x *Card) GetDot() int32 {
	if x != nil {
		return x.Dot
	}
	return 0
}

func (x *Card) GetSuit() string {
	if x != nil {
		return x.Suit
	}
	return ""
}

var File_poker_proto protoreflect.FileDescriptor

var file_poker_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61,
	0x70, 0x69, 0x22, 0x6d, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x72, 0x61, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x73, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0x1e, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d,
	0x65, 0x4d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x4d,
	0x73, 0x22, 0x1e, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d,
	0x65, 0x4d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x4d,
	0x73, 0x22, 0x20, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x23, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x37, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x56, 0x69,
	0x65, 0x77, 0x22, 0x37, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x27, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0a,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x2a,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x67, 0x0a, 0x0b, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x22, 0x42, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x6f, 0x22, 0x28, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x22, 0x0f, 0x0a,
	0x0d, 0x52, 0x65, 0x71, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x0f,
	0x0a, 0x0d, 0x52, 0x65, 0x71, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22,
	0x2d, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x11,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68,
	0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x68, 0x69, 0x70, 0x22, 0x0f,
	0x0a, 0x0d, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x13, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x8a, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65,
	0x46, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x47, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68,
	0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x68, 0x69, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x43, 0x61, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x22, 0xd2, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x68, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x68, 0x69, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08, 0x68, 0x61,
	0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x22, 0x2c, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x6f, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x75, 0x69, 0x74, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_poker_proto_rawDescOnce sync.Once
	file_poker_proto_rawDescData = file_poker_proto_rawDesc
)

func file_poker_proto_rawDescGZIP() []byte {
	file_poker_proto_rawDescOnce.Do(func() {
		file_poker_proto_rawDescData = protoimpl.X.CompressGZIP(file_poker_proto_rawDescData)
	})
	return file_poker_proto_rawDescData
}

var file_poker_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_poker_proto_goTypes = []interface{}{
	(*ProtoWrap)(nil),         // 0: api.ProtoWrap
	(*Ping)(nil),              // 1: api.Ping
	(*Pong)(nil),              // 2: api.Pong
	(*ResSuccess)(nil),        // 3: api.ResSuccess
	(*ResFail)(nil),           // 4: api.ResFail
	(*ReqIdentity)(nil),       // 5: api.ReqIdentity
	(*ResIdentity)(nil),       // 6: api.ResIdentity
	(*ReqLobbyView)(nil),      // 7: api.ReqLobbyView
	(*ResLobbyView)(nil),      // 8: api.ResLobbyView
	(*LobbyTable)(nil),        // 9: api.LobbyTable
	(*LobbyPlayer)(nil),       // 10: api.LobbyPlayer
	(*ReqCreateTable)(nil),    // 11: api.ReqCreateTable
	(*ResCreateTable)(nil),    // 12: api.ResCreateTable
	(*ReqJoinTable)(nil),      // 13: api.ReqJoinTable
	(*ReqLeaveTable)(nil),     // 14: api.ReqLeaveTable
	(*ReqReadyStart)(nil),     // 15: api.ReqReadyStart
	(*ReqKickOutTable)(nil),   // 16: api.ReqKickOutTable
	(*ResKickOutTable)(nil),   // 17: api.ResKickOutTable
	(*ReqGameAction)(nil),     // 18: api.ReqGameAction
	(*ResGameAction)(nil),     // 19: api.ResGameAction
	(*ReqGameFullStatus)(nil), // 20: api.ReqGameFullStatus
	(*ResGameFullStatus)(nil), // 21: api.ResGameFullStatus
	(*TablePlayer)(nil),       // 22: api.TablePlayer
	(*Card)(nil),              // 23: api.Card
}
var file_poker_proto_depIdxs = []int32{
	9,  // 0: api.ResLobbyView.tables:type_name -> api.LobbyTable
	10, // 1: api.LobbyTable.players:type_name -> api.LobbyPlayer
	23, // 2: api.ResGameFullStatus.publicCard:type_name -> api.Card
	22, // 3: api.ResGameFullStatus.players:type_name -> api.TablePlayer
	23, // 4: api.TablePlayer.handCard:type_name -> api.Card
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_poker_proto_init() }
func file_poker_proto_init() {
	if File_poker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_poker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoWrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResFail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLobbyView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResLobbyView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbyTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbyPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqJoinTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLeaveTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReadyStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqKickOutTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResKickOutTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGameAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGameFullStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGameFullStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TablePlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poker_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_poker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_poker_proto_goTypes,
		DependencyIndexes: file_poker_proto_depIdxs,
		MessageInfos:      file_poker_proto_msgTypes,
	}.Build()
	File_poker_proto = out.File
	file_poker_proto_rawDesc = nil
	file_poker_proto_goTypes = nil
	file_poker_proto_depIdxs = nil
}
